参考：https://blog.csdn.net/qq_28328381/article/details/81280197
    LSM树（Log Structured Merge Tree，结构化合并树）的思想非常朴素，就是将对数据的修改增量保持在内存中，
    【达到指定的大小限制后】将【这些修改操作批量写入磁盘】（由此【提升了写性能】），是一种基于硬盘的数据结构，
与B-tree相比，能显著地减少硬盘磁盘臂的开销。当然凡事有利有弊，LSM树和B+树相比，
    LSM树牺牲了部分读性能，用来大幅提高写性能。


    读取时需要合并磁盘中的历史数据和内存中最近的修改操作,读取时可能需要先看是否命中内存，否则需要访问较多的磁盘文件
    （存储在磁盘中的是许多小批量数据，由此降低了部分读性能。但是磁盘中会定期做merge操作，合并成一棵大树，以优化读性能）。
    LSM树的优势在于有效地【规避了磁盘随机写入问题】，但【读取时可能需要访问较多的磁盘文件】。



输入数据首先被存储在日志文件，这些文件内的数据完全有序。




















